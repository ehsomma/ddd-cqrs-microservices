{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "SqlServer": {
    "SourceConnectionString": "Server=localhost;Database=RecordsPersons_Source;User Id=sa;Password=Abc#123456;App=Records;MultipleActiveResultSets=True",
    "ProjectionConnectionString": "Server=localhost;Database=RecordsPersons_Projection;User Id=sa;Password=Abc#123456;App=Records;MultipleActiveResultSets=True"
  },
  "MessageBroker": { // RabbitMQ settings.
    "Host": "localhost", // "amqp://dddpersons-queue:5672" // Idem docker hostname.
    "Username": "guest",
    "Password": "guest",
    "DefaultRetryPolicyEnable": true,
    "DefaultRetryPolicyMaxRetries": 3,
    "DefaultRetryPolicyInterval": 5000
  },
  "Redis": {
    "Host": "localhost:6379",
    "Password": "1234",
    "ProductName": "records",
    "TtlIdempotentEvents": 300 // Seconds (5').
  },
  "HealthChecksUI": {
    "HealthChecks": [
      {
        "Name": "Persons.Api.V1 (microservice)",
        "Uri": "https://localhost:7040/health"
      },
      {
        "Name": "EmailService (microservice)",
        "Uri": "https://localhost:7123/health"
      },
      {
        "Name": "Persons.BackgroundTasks (microservice)",
        "Uri": "https://localhost:7138/health"
      },
      {
        "Name": "Countries.Api.V1 (microservice)",
        "Uri": "https://localhost:7126/health"
      },
      {
        "Name": "Countries.BackgroundTasks (microservice)",
        "Uri": "https://localhost:7033/health"
      }
    ],
    //"EvaluationTimeInSeconds ": 60, // (not use _On_) EvaluationTimeOnSeconds // Not working, setted up from code.
    "MinimumSecondsBetweenFailureNotifications": 60,
    "MaximumExecutionHistoriesPerEndpoint": 15
  }
}
